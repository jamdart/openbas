# Global configuration
# suppress inspection "SpringBootApplicationProperties"
info.app.name=@project.description@
# suppress inspection "SpringBootApplicationProperties"
info.app.version=@project.version@

# OpenEx configuration
openex.name=@project.name@
openex.version=@project.version@
openex.base-url=http://localhost:8080
openex.map-tile-server-light=https://map.openex.io/styles/filigran-light/{z}/{x}/{y}.png
openex.map-tile-server-dark=https://map.openex.io/styles/filigran-dark/{z}/{x}/{y}.png
openex.cookie-name=openex_token
openex.cookie-secure=false
openex.cookie-duration=P1D
#openex.admin.email=admin@openex.io
#openex.admin.password=ChangeMe
#openex.admin.token=ChangeMe

# Server configuration
server.address=0.0.0.0
server.port=8080
server.servlet.context-path=/
server.servlet.session.timeout=20m
server.ssl.enabled=false
server.http2.enabled=${server.ssl.enabled}
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:localhost.p12
server.ssl.key-store-password=admin
server.ssl.key-alias=localhost

# Authenticators

## Local
openex.auth-local-enable=true

## Oauth
openex.auth-openid-enable=false
## Configuration examples
### Auth0
# spring.security.oauth2.client.provider.{registrationId}.issuer-uri=https://auth.auth0.io/
# spring.security.oauth2.client.registration.{registrationId}.client-name=Login with auth0
# spring.security.oauth2.client.registration.{registrationId}.client-id=
# spring.security.oauth2.client.registration.{registrationId}.client-secret=
# spring.security.oauth2.client.registration.{registrationId}.redirect-uri=${openex.base-url}/login/oauth2/code/{registrationId}
# spring.security.oauth2.client.registration.{registrationId}.scope=openid,profile,email
### GitHub / Facebook or any other pre handled OAuth2
# spring.security.oauth2.client.registration.{registrationId}.client-name=Login with Github
# spring.security.oauth2.client.registration.{registrationId}.client-id=
# spring.security.oauth2.client.registration.{registrationId}.client-secret=

## Saml2
openex.auth-saml2-enable=false
## Configuration examples
### Microsoft / Okta or any other saml2 providers
# spring.security.saml2.relyingparty.registration.{registrationId}.entity-id=
# spring.security.saml2.relyingparty.registration.{registrationId}.assertingparty.metadata-uri=
#### saml attibutes keys for firstname & lastname
# openex.provider.{registrationId}.firstname_attribute_key=
# openex.provider.{registrationId}.lastname_attribute_key=

## Oauth & Saml2
### To handle admin with sso
# openex.provider.{registrationId}.roles_path=
# openex.provider.{registrationId}.roles_admin=

# openex.logout-success-url=/

## Kerberos
openex.auth-kerberos-enable=false

# Technical
server.forward-headers-strategy=framework
spring.servlet.multipart.max-file-size=5GB
spring.servlet.multipart.max-request-size=5GB
spring.application.name=${openex.name}
spring.quartz.properties.org.quartz.scheduler.instanceName=OpenEx_Scheduler
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.quartz.properties.org.quartz.threadPool.threadCount=10
spring.data.rest.basePath=/api
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.validatorUrl=none

# Encoding
spring.mail.default-encoding=UTF-8
spring.messages.encoding=UTF-8
server.tomcat.uri-encoding=UTF-8
spring.freemarker.charset=UTF-8
server.servlet.encoding.charset=UTF-8

# Database Properties
spring.datasource.url=jdbc:postgresql://...
spring.datasource.username=openex
spring.datasource.password=<password>
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}
spring.flyway.table=migrations
spring.flyway.locations=classpath:io/openex/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0

spring.batch.jdbc.initialize-schema=always 

# Minio Properties
minio.endpoint=<localhost>
minio.bucket=openex
minio.port=9000
minio.access-key=<key>
minio.access-secret=<secret>

# Logging
logging.level.root=fatal
logging.level.org.flywaydb=info
logging.level.io.openex=warn
logging.file.name=./logs/openex.log
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.-%d{yyyy-MM-dd}.%i
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=7

#############
# INJECTORS #
#############

# Mail sending config (Always available, mandatory)
openex.default-mailer=no-reply@openex.io
spring.mail.host=smtp.mail.com
spring.mail.port=587
spring.mail.username=<username@mail.com>
spring.mail.password=<password>
# Extra mail configuration
spring.mail.properties.mail.smtp.ssl.trust=*
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# IMAP Configuration
openex.mail.imap.enabled=false
openex.mail.imap.host=imap.mail.com
openex.mail.imap.username=<username@mail.com>
openex.mail.imap.password=<<password>
openex.mail.imap.port=993
openex.mail.imap.inbox=INBOX
openex.mail.imap.sent=Sent
# Extra IMAP configuration
openex.mail.imap.ssl.trust=*
openex.mail.imap.ssl.enable=true
openex.mail.imap.auth=true
openex.mail.imap.starttls.enable=true

# OVH SMS config
ovh.sms.enable=false
ovh.sms.ak=<ak>
ovh.sms.as=<as>
ovh.sms.ck=<ck>
ovh.sms.service=<service>
ovh.sms.sender=<sender>

# Mastodon config
mastodon.enable=false
mastodon.url=<url>

# Airbus LADE config
lade.enable=false
lade.url=<url>
lade.session=30
lade.username=<username>
lade.password=<password>

# Injector Http config
http.enable=true

# Injector Caldera config
injector.caldera.enable=false
injector.caldera.id=<injector-id>
injector.caldera.collector-ids=<collector-ids>
injector.caldera.url=<caldera-url>
injector.caldera.api-key=<caldera-api-key>

#############
# COLLECTORS #
#############

# Collectors

## Collector user
collector.users.enable=false

## Collector MITRE ATT&CK
collector.mitre-attack.enable=true

## Collector Caldera
collector.caldera.enable=false
collector.caldera.id=<collector-id>
collector.caldera.url=<caldera-url>
collector.caldera.api-key=<caldera-api-key>
